import{ak as r}from"./index.0e24cb86.js";const i=async t=>(await r.post("/projects",t)).data,p=async({pageSize:t,current:s,search:e,project_type:a,project_status:o,company:c})=>{const n=e&&e!=""?`&search=${e}`:"",$=c?`&company=${c}`:"",u=a?`&project_type=${a}`:"",d=o?`&project_status=${o}`:"";return(await r.get(`/projects?page=${s!=null?s:1}&page_size=${t!=null?t:10}`+n+u+d+$)).data},y=async t=>(await r.get(`/projects/${t}`)).data,l=async({pageSize:t,current:s,search:e,value:a,project_id:o})=>{const c=e&&e!=""?`&search=${e}`:"",n=a?`&value=${a}`:"";return(await r.get(`/projects/users-not-assigned?page=${s!=null?s:1}&page_size=${t!=null?t:10}&project_id=${o}`+c+n)).data},w=async({id:t,projectId:s})=>(await r.delete(`/projects/assigned-user/${t}`,{data:{project_id:s}})).data,g=async({pageSize:t,current:s,search:e,value:a,project_id:o})=>{const c=e&&e!=""?`&search=${e}`:"",n=a?`&value=${a}`:"";return(await r.get(`/projects/users-assigned-paginated?page=${s!=null?s:1}&page_size=${t!=null?t:10}&project_id=${o}`+c+n)).data},U=async({pageSize:t,current:s,search:e,answered_by:a,status_answered:o,id:c,prjId:n})=>{const $=e&&e!=""?`&search=${e}`:"",u=a?`&answered_by=${a}`:"",d=o?`&status_answered=${o}`:"";return(await r.get(`/projects/questions?structure_id=${c}&project_id=${n}&page=${s!=null?s:1}&page_size=${t!=null?t:10}`+$+u+d)).data},_=async t=>(await r.delete(`/projects/${t}`)).data,P=async t=>(await r.post("/projects/questions",t)).data,f=async t=>(await r.post("/projects/question/answer",t)).data,m=async t=>(await r.post("/projects/assign-users",t)).data,A=async({pageSize:t,current:s,search:e,company:a})=>{const o=e&&e!=""?`&search=${e}`:"";return(await r.get(`/projects/by-company?page=${s!=null?s:1}&page_size=${t!=null?t:10}&company_id=${a}`+o)).data},B=async({pageSize:t,current:s,search:e,project:a})=>{const o=e&&e!=""?`&search=${e}`:"";return(await r.get(`/projects/structure/by-project?page=${s!=null?s:1}&page_size=${t!=null?t:10}&project_id=${a}`+o)).data},b=async({payload:t,id:s})=>(await r.put(`/projects/info/${s}`,t)).data,k=async({structureId:t,projectId:s})=>(await r.get(`/projects/info-structure?structure_id=${t}&project_id=${s}`)).data,v=async({userId:t,projectId:s})=>(await r.get(`/projects/assigned-user/${t}?project_id=${s}`)).data,D=async({userId:t,payload:s})=>(await r.put(`/projects/assigned-user/${t}`,s)).data,Q=async({pic:t,signature:s,projectId:e,structureId:a})=>(await r.put("/projects/update-pic",{pic:t,signature:s,project_id:e,structure_id:a})).data,C=async({projectId:t})=>(await r.get(`/projects/statistic/${t}`)).data,I=async({projectId:t,pageSize:s,current:e,search:a})=>{const o=a&&a!=""?`&search=${a}`:"";return(await r.get(`/projects/logs/${t}?page=${e!=null?e:1}&page_size=${s!=null?s:10}`+o)).data},L=async({userId:t,pageSize:s,current:e,search:a})=>{const o=a&&a!=""?`&search=${a}`:"";return(await r.get(`/projects/logs-by-user/${t}?page=${e!=null?e:1}&page_size=${s!=null?s:10}`+o)).data},N=async t=>(await r.put("/projects/create-structure-for-project",t)).data,h=async({id:t,projectId:s})=>(await r.delete(`/projects/delete-structure?project_id=${s}&structure_id=${t}`)).data;export{B as a,v as b,g as c,w as d,C as e,P as f,p as g,N as h,h as i,l as j,I as k,b as l,_ as m,y as n,i as o,L as p,Q as q,f as r,m as s,k as t,D as u,U as v,A as w};
