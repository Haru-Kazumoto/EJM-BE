definitions:
  dto.AnswerConditions:
    properties:
      label:
        type: string
      value:
        type: string
    type: object
  dto.AnswerQuestion:
    properties:
      answer:
        properties:
          conditions:
            items:
              $ref: '#/definitions/dto.AnswerConditions'
            type: array
          keterangan:
            type: string
          label:
            type: string
          value:
            type: string
        required:
        - label
        - value
        type: object
      question_id:
        type: integer
    required:
    - question_id
    type: object
  dto.BaseSelectValue:
    properties:
      label:
        type: string
      value:
        type: string
    type: object
  dto.CreateAction:
    properties:
      default:
        type: boolean
      method:
        type: string
      name:
        type: string
      path:
        type: string
    required:
    - method
    - name
    - path
    type: object
  dto.CreateCompany:
    properties:
      active:
        type: boolean
      name:
        type: string
      object_structures:
        items:
          $ref: '#/definitions/dto.ObjectStructures'
        minItems: 1
        type: array
      objectStrings:
        type: string
      profilePict:
        type: string
    required:
    - name
    - object_structures
    type: object
  dto.CreateFieldSelectInventory:
    properties:
      is_active:
        type: boolean
      name:
        type: string
      type:
        type: string
    required:
    - type
    type: object
  dto.CreateInventory:
    properties:
      archive_title:
        type: string
      archive_year_of:
        type: string
      archive_year_to:
        type: string
      file_number:
        type: string
      frequency_of_change_addition_id:
        type: integer
      inventory_documents:
        items:
          $ref: '#/definitions/dto.CreateInventoryDocument'
        type: array
      project_id:
        type: integer
      storage_facilities_id:
        type: integer
      storage_media_id:
        type: integer
      structure_id:
        type: string
      userId:
        type: integer
    required:
    - archive_title
    - project_id
    - structure_id
    type: object
  dto.CreateInventoryDocument:
    properties:
      authenticity_level_id:
        type: integer
      content:
        type: string
      dimension_size_archiev_id:
        type: integer
      document_shape_id:
        type: integer
      document_type_id:
        type: integer
      document_type_in_order_of_process:
        type: string
      filled_by:
        type: integer
      inventory_id:
        type: integer
      status:
        type: string
    type: object
  dto.CreateMenu:
    properties:
      name:
        type: string
      parent_id:
        type: integer
      path:
        type: string
    required:
    - name
    - path
    type: object
  dto.CreateNewUser:
    properties:
      address:
        type: string
      email:
        type: string
      enable_login_by_link:
        type: boolean
      full_name:
        type: string
      password:
        type: string
      phone:
        type: string
      profilePict:
        type: string
      roleId:
        type: integer
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  dto.CreateProject:
    properties:
      company_id:
        type: integer
      project_code:
        type: string
      project_description:
        type: string
      project_due_date:
        type: string
      project_name:
        type: string
      project_status:
        type: string
      project_type:
        type: string
    required:
    - company_id
    - project_code
    - project_due_date
    - project_name
    - project_status
    - project_type
    type: object
  dto.CreateQuestion:
    properties:
      name:
        type: string
      questions:
        items:
          $ref: '#/definitions/dto.Questions'
        type: array
    required:
    - name
    - questions
    type: object
  dto.CreateRole:
    properties:
      actions:
        items:
          $ref: '#/definitions/dto.MenusAction'
        type: array
      active:
        type: boolean
      name:
        type: string
      object_actions:
        items:
          properties:
            id:
              type: integer
            name:
              type: string
            parentId:
              type: integer
            path:
              type: string
            state:
              type: integer
            type:
              type: string
          required:
          - id
          - name
          - path
          - type
          type: object
        type: array
    required:
    - actions
    - name
    - object_actions
    type: object
  dto.CreateSingleQuestion:
    properties:
      is_mandatory:
        type: boolean
      name:
        type: string
      options:
        items:
          properties:
            conditions:
              items:
                properties:
                  is_mandatory:
                    type: boolean
                  name:
                    type: string
                type: object
              type: array
            isMandatory:
              type: boolean
            name:
              type: string
            value:
              type: integer
          required:
          - name
          type: object
        type: array
    required:
    - name
    - options
    type: object
  dto.CreateStructureForProjectRequest:
    properties:
      kode:
        type: string
      nama:
        type: string
      parent:
        type: string
      project_id:
        type: integer
      uuid:
        type: string
    required:
    - nama
    - parent
    - project_id
    - uuid
    type: object
  dto.DeleteActionBulk:
    properties:
      ids:
        items:
          type: integer
        minItems: 1
        type: array
    required:
    - ids
    type: object
  dto.DeleteCompanyBulk:
    properties:
      company_ids:
        items:
          type: integer
        minItems: 1
        type: array
    required:
    - company_ids
    type: object
  dto.DeleteMenuBulk:
    properties:
      ids:
        items:
          type: integer
        minItems: 1
        type: array
    required:
    - ids
    type: object
  dto.DeleteRoleBulk:
    properties:
      role_ids:
        items:
          type: integer
        minItems: 1
        type: array
    required:
    - role_ids
    type: object
  dto.DeleteUserBulk:
    properties:
      ids:
        items:
          type: integer
        minItems: 1
        type: array
    required:
    - ids
    type: object
  dto.DetailAssignUser:
    properties:
      job:
        items:
          $ref: '#/definitions/dto.BaseSelectValue'
        type: array
      structures:
        items:
          $ref: '#/definitions/dto.BaseSelectValue'
        type: array
    type: object
  dto.Login:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  dto.LoginByPin:
    properties:
      pin:
        type: string
    required:
    - pin
    type: object
  dto.MenuAPI:
    properties:
      id:
        type: integer
      name:
        type: string
      parentId:
        type: integer
      path:
        type: string
      type:
        type: string
    type: object
  dto.MenusAction:
    properties:
      apiid:
        items:
          type: integer
        type: array
      menuId:
        type: integer
    required:
    - menuId
    type: object
  dto.ObjectStructures:
    properties:
      id:
        type: string
      name:
        type: string
      parentId:
        type: string
      structureCode:
        type: string
    required:
    - id
    - name
    type: object
  dto.PayloadCreateAction:
    properties:
      data:
        items:
          $ref: '#/definitions/dto.CreateAction'
        minItems: 1
        type: array
    required:
    - data
    type: object
  dto.PayloadCreateMenu:
    properties:
      data:
        items:
          $ref: '#/definitions/dto.CreateMenu'
        minItems: 1
        type: array
    required:
    - data
    type: object
  dto.ProjectDetail:
    properties:
      company:
        $ref: '#/definitions/models.Company'
      company_id:
        type: integer
      company_structure:
        items: {}
        type: array
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      project_code:
        type: string
      project_date:
        type: string
      select_project_type_label:
        type: string
      select_project_type_value:
        type: string
      select_status_label:
        type: string
      select_status_value:
        type: string
      status:
        type: string
      total_assigned_users:
        type: integer
      type:
        type: string
      updated_at:
        type: string
    type: object
  dto.ProjectStatistics:
    properties:
      current_filled_inventory:
        type: integer
      current_filled_questions:
        type: integer
      current_filled_volumes:
        type: integer
      total_inventory:
        type: integer
      total_questions:
        type: integer
      total_volumes:
        type: integer
    type: object
  dto.Questions:
    properties:
      is_mandatory:
        type: boolean
      name:
        type: string
      options:
        items:
          properties:
            conditions:
              items:
                properties:
                  is_mandatory:
                    type: boolean
                  name:
                    type: string
                type: object
              type: array
            isMandatory:
              type: boolean
            name:
              type: string
            value:
              type: integer
          required:
          - name
          type: object
        type: array
    required:
    - name
    - options
    type: object
  dto.RefreshToken:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  dto.RequestDispatchReportQuestioner:
    properties:
      company_id:
        type: integer
      project_id:
        type: integer
      user_id:
        type: integer
    required:
    - company_id
    - project_id
    type: object
  dto.SetAccessRole:
    properties:
      actions:
        items:
          $ref: '#/definitions/dto.MenusAction'
        type: array
      roleId:
        type: integer
    required:
    - actions
    - roleId
    type: object
  dto.SetAssignUser:
    properties:
      job:
        items:
          type: string
        minItems: 1
        type: array
      project_id:
        type: integer
      structure_id:
        items:
          type: string
        minItems: 1
        type: array
      users:
        items:
          type: string
        minItems: 1
        type: array
    required:
    - job
    - project_id
    - structure_id
    - users
    type: object
  dto.SetProjectQuestion:
    properties:
      project_id:
        type: integer
      question_template_id:
        items:
          type: integer
        type: array
      structure_ids:
        items:
          type: string
        minItems: 1
        type: array
    required:
    - project_id
    - question_template_id
    - structure_ids
    type: object
  dto.ToggleActive:
    properties:
      payload:
        type: boolean
    type: object
  dto.UpdateAction:
    properties:
      default:
        type: boolean
      method:
        type: string
      name:
        type: string
      path:
        type: string
    required:
    - method
    - name
    - path
    type: object
  dto.UpdateDetailAssignedUser:
    properties:
      job:
        items:
          type: string
        minItems: 1
        type: array
      project_id:
        type: integer
      structure_id:
        items:
          type: string
        minItems: 1
        type: array
    required:
    - job
    - project_id
    - structure_id
    type: object
  dto.UpdateFieldSelectInventory:
    properties:
      id:
        type: integer
      is_active:
        type: boolean
      name:
        type: string
      type:
        type: string
    required:
    - id
    - type
    type: object
  dto.UpdateInventory:
    properties:
      archive_title:
        type: string
      archive_year_of:
        type: string
      archive_year_to:
        type: string
      file_number:
        type: string
      frequency_of_change_addition_id:
        type: integer
      storage_facilities_id:
        type: integer
      storage_media_id:
        type: integer
    required:
    - archive_title
    type: object
  dto.UpdateMenu:
    properties:
      apis:
        items:
          type: integer
        type: array
      name:
        type: string
      parent_id:
        type: integer
      path:
        type: string
    required:
    - name
    - path
    type: object
  dto.UpdatePIC:
    properties:
      pic:
        type: string
      project_id:
        type: integer
      signature:
        type: string
      structure_id:
        type: string
      type:
        type: string
    required:
    - pic
    - project_id
    - signature
    - structure_id
    - type
    type: object
  dto.UpdateProject:
    properties:
      project_code:
        type: string
      project_description:
        type: string
      project_due_date:
        type: string
      project_name:
        type: string
      project_status:
        type: string
      project_type:
        type: string
    required:
    - project_code
    - project_due_date
    - project_name
    - project_status
    - project_type
    type: object
  dto.UpdateQuestionTemplateName:
    properties:
      name:
        type: string
    type: object
  dto.UpdateSingleQuestion:
    properties:
      is_mandatory:
        type: boolean
      name:
        type: string
      options:
        items:
          properties:
            conditions:
              items:
                properties:
                  is_mandatory:
                    type: boolean
                  name:
                    type: string
                type: object
              type: array
            isMandatory:
              type: boolean
            name:
              type: string
            value:
              type: integer
          required:
          - name
          type: object
        type: array
    required:
    - name
    - options
    type: object
  middlewares.ResponseError:
    properties:
      message: {}
      request_id:
        type: string
      time:
        type: string
    type: object
  models.Action:
    properties:
      api:
        type: string
      created_at:
        type: string
      default:
        type: boolean
      id:
        type: integer
      method:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.ActionsMenus:
    properties:
      actionId:
        type: integer
      actions:
        $ref: '#/definitions/models.Action'
      created_at:
        type: string
      id:
        type: integer
      menuId:
        type: integer
      updated_at:
        type: string
    type: object
  models.AuthenticityLevel:
    properties:
      created_at:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.Company:
    properties:
      created_at:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      name:
        type: string
      profile_pict:
        type: string
      structures:
        items: {}
        type: array
      updated_at:
        type: string
    type: object
  models.DimensionSizeArchiev:
    properties:
      created_at:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.DocumentShape:
    properties:
      created_at:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.DocumentType:
    properties:
      created_at:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.FrequencyOfChangeAddition:
    properties:
      created_at:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.Inventory:
    properties:
      archive_title:
        type: string
      archive_year_of:
        type: string
      archive_year_to:
        type: string
      created_at:
        type: string
      file_number:
        type: string
      frequency_of_change_addition:
        $ref: '#/definitions/models.FrequencyOfChangeAddition'
      frequency_of_change_addition_id:
        type: integer
      id:
        type: integer
      inventory_documents:
        items:
          $ref: '#/definitions/models.InventoryDocument'
        type: array
      is_active:
        type: boolean
      project_id:
        type: integer
      status:
        type: string
      storage_facilities:
        $ref: '#/definitions/models.StorageFacilities'
      storage_facilities_id:
        type: integer
      storage_media:
        $ref: '#/definitions/models.StorageMedia'
      storage_media_id:
        type: integer
      structure_id:
        type: string
      updated_at:
        type: string
    type: object
  models.InventoryDocument:
    properties:
      authenticity_level:
        $ref: '#/definitions/models.AuthenticityLevel'
      authenticity_level_id:
        type: integer
      content:
        type: string
      created_at:
        type: string
      dimension_size_archiev:
        $ref: '#/definitions/models.DimensionSizeArchiev'
      dimension_size_archiev_id:
        type: integer
      document_shape:
        $ref: '#/definitions/models.DocumentShape'
      document_shape_id:
        type: integer
      document_type:
        $ref: '#/definitions/models.DocumentType'
      document_type_id:
        type: integer
      document_type_in_order_of_process:
        type: string
      filled_by:
        type: integer
      id:
        type: integer
      inventory_id:
        type: integer
      is_active:
        type: boolean
      status:
        type: string
      updated_at:
        type: string
    type: object
  models.Menu:
    properties:
      actions_menus:
        items:
          $ref: '#/definitions/models.ActionsMenus'
        type: array
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      parentId:
        type: integer
      path:
        type: string
      updated_at:
        type: string
    type: object
  models.Paginate:
    properties:
      page:
        type: string
      page_count:
        type: integer
      page_size:
        type: string
      total:
        type: integer
    type: object
  models.Project:
    properties:
      company:
        $ref: '#/definitions/models.Company'
      company_id:
        type: integer
      company_structure:
        items: {}
        type: array
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      project_code:
        type: string
      project_date:
        type: string
      status:
        type: string
      total_assigned_users:
        type: integer
      type:
        type: string
      updated_at:
        type: string
    type: object
  models.ProjectCompanyStructure:
    properties:
      company:
        $ref: '#/definitions/models.Company'
      company_id:
        type: integer
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      parent_id:
        type: string
      project:
        $ref: '#/definitions/models.Project'
      project_id:
        type: integer
      questioner_info:
        items: {}
        type: array
      structureCode:
        type: string
      total_questions:
        type: integer
      updated_at:
        type: string
      uuid:
        type: string
    type: object
  models.ProjectQuestioner:
    properties:
      answered_at:
        type: string
      answered_by_name:
        type: string
      answered_by_profile:
        type: string
      answers:
        items: {}
        type: array
      created_at:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      isMandatory:
        type: boolean
      name:
        type: string
      project_company_structure_id:
        type: string
      project_id:
        type: integer
      question_template:
        $ref: '#/definitions/models.QuestionTemplates'
      status:
        type: string
      template_id:
        type: integer
      updated_at:
        type: string
      user:
        $ref: '#/definitions/models.User'
        description: relation
      user_id:
        type: integer
    type: object
  models.QuestionTemplates:
    properties:
      created_at:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      name:
        type: string
      questions:
        items:
          $ref: '#/definitions/models.Questions'
        type: array
      updated_at:
        type: string
    type: object
  models.Questions:
    properties:
      answers:
        items: {}
        type: array
      created_at:
        type: string
      id:
        type: integer
      isMandatory:
        type: boolean
      name:
        type: string
      template_id:
        type: integer
      updated_at:
        type: string
    type: object
  models.Role:
    properties:
      created_at:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      name:
        type: string
      object_menus:
        items: {}
        type: array
      roles_menus:
        items:
          $ref: '#/definitions/models.RolesMenus'
        type: array
      updated_at:
        type: string
    type: object
  models.RolesMenus:
    properties:
      created_at:
        type: string
      id:
        type: integer
      menu:
        $ref: '#/definitions/models.Menu'
      menu_id:
        type: integer
      role:
        $ref: '#/definitions/models.Role'
      roleId:
        type: integer
      updated_at:
        type: string
    type: object
  models.StorageFacilities:
    properties:
      created_at:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.StorageMedia:
    properties:
      created_at:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.User:
    properties:
      address:
        type: string
      created_at:
        type: string
      email:
        type: string
      enable_login_by_link:
        type: boolean
      full_name:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      phone:
        type: string
      pin:
        type: string
      profile_pict:
        type: string
      role:
        $ref: '#/definitions/models.Role'
      roleId:
        type: integer
      updated_at:
        type: string
      username:
        type: string
    type: object
  services.LoginResponse:
    properties:
      refresh_token:
        type: string
      token:
        type: string
    type: object
  utils.Response:
    properties:
      data: {}
      message: {}
      statusCode:
        type: integer
    type: object
  utils.ResponsePaginate:
    properties:
      data: {}
      key:
        type: string
      message: {}
      meta:
        $ref: '#/definitions/models.Paginate'
      statusCode:
        type: integer
    type: object
info:
  contact:
    name: PT Tata Kelola Dokumen
  description: Aplikasi Assessment & Monitoring
  license:
    name: Private License
  title: EJM Assessment & Monitoring API Documentation
  version: "1.0"
paths:
  /:
    get:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Get All Notification
      tags:
      - Role
  /actions/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID Menu
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Delete Action
      tags:
      - Action
    get:
      consumes:
      - application/json
      parameters:
      - description: ID Menu
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Action'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Detail Action
      tags:
      - Action
    put:
      consumes:
      - application/json
      parameters:
      - description: ID Menu
        in: path
        name: id
        required: true
        type: integer
      - description: body update
        in: body
        name: menu
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateAction'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Menu'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Update Action
      tags:
      - Action
  /actions/bulk:
    delete:
      consumes:
      - application/json
      parameters:
      - description: body delete
        in: body
        name: menu
        required: true
        schema:
          $ref: '#/definitions/dto.DeleteActionBulk'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Menu'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Delete Actions Bulk
      tags:
      - Actions
  /actions/create-bulk:
    post:
      consumes:
      - application/json
      parameters:
      - description: Data API
        in: body
        name: menus
        required: true
        schema:
          $ref: '#/definitions/dto.PayloadCreateAction'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Create Action Bulk
      tags:
      - API
  /actions/menu/{menu_id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: ID Menu
        in: path
        name: menu_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Action'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Detail Action By Menu
      tags:
      - Action
  /actions/paginated:
    get:
      consumes:
      - application/json
      parameters:
      - description: Halaman
        in: query
        name: page
        required: true
        type: string
      - description: Jumlah Data Per halaman
        in: query
        name: page_size
        required: true
        type: string
      - description: Mencari Data
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Ambil semua data API
      tags:
      - Action
  /assigned-tasks:
    get:
      consumes:
      - application/json
      parameters:
      - description: Halaman
        in: query
        name: page
        required: true
        type: string
      - description: Jumlah Data Per halaman
        in: query
        name: page_size
        required: true
        type: string
      - description: Mencari Data
        in: query
        name: search
        type: string
      - description: User ID
        in: query
        name: user_id
        required: true
        type: integer
      - description: Job Type
        in: query
        name: job
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Get Assigned Test
      tags:
      - Assigned Task
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Bahasa
        enum:
        - en
        - id
        in: header
        name: Accept-Language
        type: string
      - description: Login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/dto.Login'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.LoginResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: Autentikasi User untuk Resource Private Server
      tags:
      - Auth
  /auth/oauth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Bahasa
        enum:
        - en
        - id
        in: header
        name: Accept-Language
        type: string
      - description: Login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/dto.LoginByPin'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.LoginResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: Autentikasi User untuk Resource Private Server
      tags:
      - Auth
  /auth/refresh-token:
    post:
      consumes:
      - application/json
      parameters:
      - description: Bahasa
        enum:
        - en
        - id
        in: header
        name: Accept-Language
        type: string
      - description: Refresh Token
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/dto.RefreshToken'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.LoginResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: Refresh JWT Token Yang Expired
      tags:
      - Auth
  /company:
    get:
      consumes:
      - application/json
      parameters:
      - description: Halaman
        in: query
        name: page
        required: true
        type: string
      - description: Jumlah Data Per halaman
        in: query
        name: page_size
        required: true
        type: string
      - description: Mencari Data
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponsePaginate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Ambil daftar Company
      tags:
      - Company
    post:
      consumes:
      - application/json
      parameters:
      - description: Buat Company Baru
        in: body
        name: company
        required: true
        schema:
          $ref: '#/definitions/dto.CreateCompany'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.CreateCompany'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Buat Company
      tags:
      - Company
  /company/{companyId}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Company Id
        in: path
        name: companyId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Delete Company Berdasarkan ID
      tags:
      - Company
    get:
      consumes:
      - application/json
      parameters:
      - description: Company ID
        in: path
        name: companyId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Company'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Get Company Berdasarkan ID
      tags:
      - Company
    put:
      consumes:
      - application/json
      parameters:
      - description: Company ID
        in: path
        name: companyId
        required: true
        type: string
      - description: Update Company Baru
        in: body
        name: company
        required: true
        schema:
          $ref: '#/definitions/dto.CreateCompany'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.CreateCompany'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Update Company
      tags:
      - Company
  /company/bulk:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Hapus Company banyak
        in: body
        name: roleIds
        required: true
        schema:
          $ref: '#/definitions/dto.DeleteCompanyBulk'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Hapus Company banyak
      tags:
      - Company
  /delete:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Notification ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Delete Notification
      tags:
      - Role
  /inventories:
    get:
      consumes:
      - application/json
      parameters:
      - description: Halaman
        in: query
        name: page
        required: true
        type: string
      - description: Jumlah Data Per halaman
        in: query
        name: page_size
        required: true
        type: string
      - description: Mencari Data
        in: query
        name: search
        type: string
      - description: Filter Filled By
        in: query
        name: filled_by
        type: string
      - description: Filter Status
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponsePaginate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Ambil daftar Inventory
      tags:
      - Inventory
    post:
      consumes:
      - application/json
      parameters:
      - description: Buat Inventory baru Baru
        in: body
        name: inventory
        required: true
        schema:
          $ref: '#/definitions/dto.CreateInventory'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.QuestionTemplates'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Buat Inventory baru
      tags:
      - Inventory
  /inventories/{inventory_id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Inventory ID
        in: path
        name: inventory_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Delete Inventory
      tags:
      - Inventory
    get:
      consumes:
      - application/json
      parameters:
      - description: Inventory ID
        in: path
        name: inventory_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Find By Id Inventory
      tags:
      - Inventory
    put:
      consumes:
      - application/json
      parameters:
      - description: Update Inventory
        in: path
        name: inventory_id
        required: true
        type: integer
      - description: Update Inventory Info
        in: body
        name: inventory
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateInventory'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Inventory'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Update Inventory Info
      tags:
      - Inventory
  /inventories/document:
    get:
      consumes:
      - application/json
      parameters:
      - description: Halaman
        in: query
        name: page
        required: true
        type: string
      - description: Jumlah Data Per halaman
        in: query
        name: page_size
        required: true
        type: string
      - description: Mencari Data
        in: query
        name: search
        type: string
      - description: Filter Filled By
        in: query
        name: filled_by
        type: string
      - description: Filter Status
        in: query
        name: status
        type: string
      - description: Filter Inventory Id
        in: query
        name: inventory_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponsePaginate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Ambil daftar Inventory Document
      tags:
      - Inventory
    post:
      consumes:
      - application/json
      parameters:
      - description: Buat Inventory Document baru Baru
        in: body
        name: inventory
        required: true
        schema:
          $ref: '#/definitions/dto.CreateInventoryDocument'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.QuestionTemplates'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Buat Inventory Document baru
      tags:
      - Inventory
  /inventories/select:
    get:
      consumes:
      - application/json
      parameters:
      - description: Halaman
        in: query
        name: page
        required: true
        type: string
      - description: Jumlah Data Per halaman
        in: query
        name: page_size
        required: true
        type: string
      - description: Mencari Data
        in: query
        name: search
        type: string
      - description: Tipe Select
        in: query
        name: field
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponsePaginate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Ambil daftar select Inventory
      tags:
      - Inventory
  /inventories/select/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Tipe Select
        in: query
        name: field
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponsePaginate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Ambil Satu daftar select Inventory
      tags:
      - Inventory
  /inventories/select/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: Body
        in: body
        name: page
        required: true
        schema:
          $ref: '#/definitions/dto.CreateFieldSelectInventory'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponsePaginate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Create daftar select Inventory
      tags:
      - Inventory
  /inventories/select/update:
    put:
      consumes:
      - application/json
      parameters:
      - description: Body
        in: body
        name: Update
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateFieldSelectInventory'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponsePaginate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Update daftar select Inventory
      tags:
      - Inventory
  /master-lookup:
    get:
      consumes:
      - application/json
      parameters:
      - description: Lookup Type
        in: query
        name: type
        required: true
        type: string
      - description: Halaman
        in: query
        name: page
        required: true
        type: string
      - description: Jumlah Data Per halaman
        in: query
        name: page_size
        required: true
        type: string
      - description: Mencari Data
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponsePaginate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Ambil daftar Lookup
      tags:
      - Master Lookup
  /menus:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.MenuAPI'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Ambil semua data menu
      tags:
      - Menu
  /menus/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID Menu
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Delete Menu
      tags:
      - Menu
    get:
      consumes:
      - application/json
      parameters:
      - description: ID Menu
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Menu'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Detail Menu
      tags:
      - Menu
    put:
      consumes:
      - application/json
      parameters:
      - description: ID Menu
        in: path
        name: id
        required: true
        type: integer
      - description: body update
        in: body
        name: menu
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateMenu'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Menu'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Update Menu
      tags:
      - Menu
  /menus/bulk:
    delete:
      consumes:
      - application/json
      parameters:
      - description: body delete
        in: body
        name: menu
        required: true
        schema:
          $ref: '#/definitions/dto.DeleteMenuBulk'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Menu'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Delete Menu Bulk
      tags:
      - Menu
  /menus/create-bulk:
    post:
      consumes:
      - application/json
      parameters:
      - description: Data Menu
        in: body
        name: menus
        required: true
        schema:
          $ref: '#/definitions/dto.PayloadCreateMenu'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Create Menu Bulk
      tags:
      - Menu
  /menus/paginated:
    get:
      consumes:
      - application/json
      parameters:
      - description: Halaman
        in: query
        name: page
        required: true
        type: string
      - description: Jumlah Data Per halaman
        in: query
        name: page_size
        required: true
        type: string
      - description: Mencari Data
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Ambil semua data menu
      tags:
      - Menu
  /projects:
    get:
      consumes:
      - application/json
      parameters:
      - description: Halaman
        in: query
        name: page
        required: true
        type: string
      - description: Jumlah Data Per halaman
        in: query
        name: page_size
        required: true
        type: string
      - description: Mencari Data
        in: query
        name: search
        type: string
      - description: Project type
        in: query
        name: project_type
        type: string
      - description: Project status
        in: query
        name: project_status
        type: string
      - description: Company
        in: query
        name: company
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponsePaginate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Ambil daftar Project
      tags:
      - Project
    post:
      consumes:
      - application/json
      parameters:
      - description: Buat Project baru Baru
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/dto.CreateProject'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.QuestionTemplates'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Buat Project baru
      tags:
      - Project
  /projects/{project_id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Delete Project
      tags:
      - Project
    get:
      consumes:
      - application/json
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.ProjectDetail'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Ambil detail Project
      tags:
      - Project
  /projects/assign-user/{user_id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: Update Assigned User
        in: path
        name: user_id
        required: true
        type: string
      - description: Update Assigned User
        in: body
        name: assign_user
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateDetailAssignedUser'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.QuestionTemplates'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Update Assigned User
      tags:
      - Project
  /projects/assign-users:
    post:
      consumes:
      - application/json
      parameters:
      - description: Buat Project Question baru
        in: body
        name: assign_user
        required: true
        schema:
          $ref: '#/definitions/dto.SetAssignUser'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.QuestionTemplates'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Atur User ke Unit Kerja sesuai pekerjaan
      tags:
      - Project
  /projects/assigned-user/{user_id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      - description: Project ID
        in: body
        name: project_id
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Delete Assigned User
      tags:
      - Project
    get:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      - description: Project ID
        in: query
        name: project_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.DetailAssignUser'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Detail Assign User
      tags:
      - Project
  /projects/by-question:
    get:
      consumes:
      - application/json
      parameters:
      - description: Halaman
        in: query
        name: page
        required: true
        type: string
      - description: Jumlah Data Per halaman
        in: query
        name: page_size
        required: true
        type: string
      - description: Mencari Data
        in: query
        name: search
        type: string
      - description: Company
        in: query
        name: company_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponsePaginate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Ambil daftar Project berdasarkan company
      tags:
      - Project
  /projects/create-structure-for-project:
    put:
      consumes:
      - application/json
      parameters:
      - description: Data Unit kerja
        in: body
        name: unit_kerjo
        required: true
        schema:
          $ref: '#/definitions/dto.CreateStructureForProjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponsePaginate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Tambah unit kerja ke projecct existing
      tags:
      - Project
  /projects/delete-structure:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Structure ID
        in: query
        name: structure_id
        required: true
        type: string
      - description: Project ID
        in: query
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Delete Struktur by Project
      tags:
      - Project
  /projects/info-structure:
    get:
      consumes:
      - application/json
      parameters:
      - description: Structure ID
        in: query
        name: structure_id
        required: true
        type: string
      - description: Project ID
        in: query
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.ProjectCompanyStructure'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Detail Struktur by Project
      tags:
      - Project
  /projects/info/{project_id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: Jumlah Data Per halaman
        in: query
        name: project_id
        required: true
        type: string
      - description: Update Project Info
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateProject'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Project'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Update Project Info
      tags:
      - Project
  /projects/logs-by-user/{user_id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Halaman
        in: query
        name: page
        required: true
        type: string
      - description: Jumlah Data Per halaman
        in: query
        name: page_size
        required: true
        type: string
      - description: Mencari Data
        in: query
        name: search
        type: string
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponsePaginate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Ambil Project Log By User
      tags:
      - Project
  /projects/logs/{project_id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Halaman
        in: query
        name: page
        required: true
        type: string
      - description: Jumlah Data Per halaman
        in: query
        name: page_size
        required: true
        type: string
      - description: Mencari Data
        in: query
        name: search
        type: string
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponsePaginate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Ambil Project Log
      tags:
      - Project
  /projects/question/answer:
    post:
      consumes:
      - application/json
      parameters:
      - description: Jawab Pertanyaan
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/dto.AnswerQuestion'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Jawab pertanyaan
      tags:
      - Project
  /projects/question/answer/{question_id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Question ID
        in: path
        name: question_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.ProjectQuestioner'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Ambil Question yang terjawab
      tags:
      - Project
  /projects/questions:
    get:
      consumes:
      - application/json
      parameters:
      - description: Struktur ID
        in: query
        name: structure_id
        required: true
        type: string
      - description: Project ID
        in: query
        name: project_id
        required: true
        type: string
      - description: search
        in: query
        name: search
        required: true
        type: string
      - description: Status Terjawab
        in: query
        name: status_answered
        required: true
        type: string
      - description: Dijawab Siapa
        in: query
        name: answered_by
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponsePaginate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Ambil Quesionare by structure id
      tags:
      - Project
    post:
      consumes:
      - application/json
      parameters:
      - description: Buat Project Question baru
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/dto.SetProjectQuestion'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.QuestionTemplates'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Atur Template Pertanyaan ke Unit Kerja
      tags:
      - Project
  /projects/stat:
    get:
      consumes:
      - application/json
      parameters:
      - description: Halaman
        in: query
        name: page
        required: true
        type: string
      - description: Jumlah Data Per halaman
        in: query
        name: page_size
        required: true
        type: string
      - description: Mencari Data
        in: query
        name: search
        type: string
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponsePaginate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Ambil Project Log
      tags:
      - Project
  /projects/statistic/{project_id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.ProjectStatistics'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Project Statistics
      tags:
      - Project
  /projects/structure/by-project:
    get:
      consumes:
      - application/json
      parameters:
      - description: Halaman
        in: query
        name: page
        required: true
        type: string
      - description: Jumlah Data Per halaman
        in: query
        name: page_size
        required: true
        type: string
      - description: Mencari Data
        in: query
        name: search
        type: string
      - description: Project ID
        in: query
        name: project_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponsePaginate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Ambil daftar Struktur By Project
      tags:
      - Project
  /projects/update-pic:
    put:
      consumes:
      - application/json
      parameters:
      - description: Update Data PIC
        in: body
        name: pic
        required: true
        schema:
          $ref: '#/definitions/dto.UpdatePIC'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Update Data PIC Per Unit Kerja
      tags:
      - Project
  /projects/users-assigned:
    get:
      consumes:
      - application/json
      parameters:
      - description: Company
        in: query
        name: project_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.User'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Ambil daftar users yang sudah diatur
      tags:
      - Project
  /projects/users-assigned-paginated:
    get:
      consumes:
      - application/json
      parameters:
      - description: Halaman
        in: query
        name: page
        required: true
        type: string
      - description: Jumlah Data Per halaman
        in: query
        name: page_size
        required: true
        type: string
      - description: Mencari Data
        in: query
        name: search
        type: string
      - description: Company
        in: query
        name: project_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponsePaginate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Ambil daftar users yang sudah diatur paginated
      tags:
      - Project
  /projects/users-not-assigned:
    get:
      consumes:
      - application/json
      parameters:
      - description: Halaman
        in: query
        name: page
        required: true
        type: string
      - description: Jumlah Data Per halaman
        in: query
        name: page_size
        required: true
        type: string
      - description: Mencari Data
        in: query
        name: search
        type: string
      - description: Company
        in: query
        name: project_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponsePaginate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Ambil daftar users yang belum diatur
      tags:
      - Project
  /questions:
    get:
      consumes:
      - application/json
      parameters:
      - description: Halaman
        in: query
        name: page
        required: true
        type: string
      - description: Jumlah Data Per halaman
        in: query
        name: page_size
        required: true
        type: string
      - description: Mencari Data
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponsePaginate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Ambil daftar Question Template
      tags:
      - Question
  /questions/by-question/{questionId}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Question Id
        in: path
        name: questionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Questions'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Detail Question Berdasarkan ID
      tags:
      - Question
    put:
      consumes:
      - application/json
      parameters:
      - description: Question Id
        in: path
        name: questionId
        required: true
        type: string
      - description: Update Nama Question Template
        in: body
        name: question_template
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateSingleQuestion'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.QuestionTemplates'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Update Question
      tags:
      - Question
  /questions/by-template/{questionId}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Question Id
        in: path
        name: questionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Delete Question Berdasarkan ID
      tags:
      - Question
  /questions/by-template/{templateId}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Question Template Id
        in: path
        name: templateId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Delete Question Template Berdasarkan ID
      tags:
      - Question
    get:
      consumes:
      - application/json
      parameters:
      - description: Question Template Id
        in: path
        name: templateId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.QuestionTemplates'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Detail Question Template Berdasarkan ID
      tags:
      - Question
    put:
      consumes:
      - application/json
      parameters:
      - description: Question Template Id
        in: path
        name: templateId
        required: true
        type: string
      - description: Update Nama Question Template
        in: body
        name: question_template
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateQuestionTemplateName'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.QuestionTemplates'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Update Nama Question Template
      tags:
      - Question
  /questions/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: Question Template Id
        in: path
        name: templateId
        required: true
        type: string
      - description: Buat Question Template Baru
        in: body
        name: question_template
        required: true
        schema:
          $ref: '#/definitions/dto.CreateQuestion'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.QuestionTemplates'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Buat Question Template Baru
      tags:
      - Question
  /questions/create/{templateId}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Question Template Id
        in: path
        name: templateId
        required: true
        type: string
      - description: Buat Question Template Baru
        in: body
        name: question_template
        required: true
        schema:
          $ref: '#/definitions/dto.CreateSingleQuestion'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.QuestionTemplates'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Buat Question Baru Berdasarkan Template
      tags:
      - Question
  /questions/table/{templateId}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Question Template Id
        in: path
        name: templateId
        required: true
        type: string
      - description: Halaman
        in: query
        name: page
        required: true
        type: string
      - description: Jumlah Data Per halaman
        in: query
        name: page_size
        required: true
        type: string
      - description: Mencari Data
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponsePaginate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Ambil Daftar Question Table berdasarkan template id
      tags:
      - Question
  /read:
    patch:
      consumes:
      - application/json
      parameters:
      - description: Notification ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Read Notification
      tags:
      - Role
  /report/questioner:
    get:
      consumes:
      - application/json
      parameters:
      - description: Halaman
        in: query
        name: page
        required: true
        type: string
      - description: Jumlah Data Per halaman
        in: query
        name: page_size
        required: true
        type: string
      - description: Mencari Data
        in: query
        name: search
        type: string
      - description: Struktur ID
        in: query
        name: structure_id
        required: true
        type: string
      - description: Project ID
        in: query
        name: project_id
        required: true
        type: string
      - description: Project Status
        in: query
        name: project_status
        required: true
        type: string
      - description: ID Company
        in: query
        name: company_id
        required: true
        type: string
      - description: Tipe Project ( Assessment / Monitoring )
        in: query
        name: project_type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponsePaginate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Report data questioner
      tags:
      - Report
    post:
      consumes:
      - application/json
      parameters:
      - description: Project ID
        in: body
        name: report
        required: true
        schema:
          $ref: '#/definitions/dto.RequestDispatchReportQuestioner'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Dispatch Questioner Report
      tags:
      - Report
  /report/status:
    get:
      consumes:
      - application/json
      parameters:
      - description: Halaman
        in: query
        name: page
        required: true
        type: string
      - description: Jumlah Data Per halaman
        in: query
        name: page_size
        required: true
        type: string
      - description: Mencari Data
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Get Report Status
      tags:
      - Report
  /roles:
    get:
      consumes:
      - application/json
      parameters:
      - description: Halaman
        in: query
        name: page
        required: true
        type: string
      - description: Jumlah Data Per halaman
        in: query
        name: page_size
        required: true
        type: string
      - description: Mencari Data
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponsePaginate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Ambil daftar Role
      tags:
      - Role
    post:
      consumes:
      - application/json
      parameters:
      - description: Daftar Role Baru
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.CreateRole'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Role'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Daftar Role Baru
      tags:
      - Role
  /roles/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Get Role Berdasarkan ID
      tags:
      - Role
    patch:
      consumes:
      - application/json
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      - description: Update Role
        in: body
        name: roles
        required: true
        schema:
          $ref: '#/definitions/dto.CreateRole'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Update Role Berdasarkan ID
      tags:
      - Role
  /roles/delete-access-role:
    delete:
      consumes:
      - application/json
      parameters:
      - description: role id
        in: query
        name: roleId
        required: true
        type: string
      - description: menu id
        in: query
        name: menuId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponsePaginate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API Delete Akses Role
      tags:
      - Role
  /roles/delete-bulk:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Hapus Role banyak
        in: body
        name: roleIds
        required: true
        schema:
          $ref: '#/definitions/dto.DeleteRoleBulk'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Hapus Role banyak
      tags:
      - Role
  /roles/delete/{roleId}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Role Id
        in: path
        name: roleId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Delete Role Berdasarkan ID
      tags:
      - Role
  /roles/set-access-role:
    post:
      consumes:
      - application/json
      parameters:
      - description: Akses Role
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/dto.SetAccessRole'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: Set Akses Role
      tags:
      - Auth
  /roles/update-access-role:
    patch:
      consumes:
      - application/json
      parameters:
      - description: Akses Role
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/dto.SetAccessRole'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: Update Akses Role
      tags:
      - Auth
  /session:
    get:
      consumes:
      - application/json
      parameters:
      - description: Bahasa
        enum:
        - en
        - id
        in: header
        name: Accept-Language
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: Data Sesi
      tags:
      - Auth
  /users:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Delete User Bulk
        in: body
        name: user_ids
        required: true
        schema:
          $ref: '#/definitions/dto.DeleteUserBulk'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Delete User Bulk
      tags:
      - User
    get:
      consumes:
      - application/json
      parameters:
      - description: Halaman
        in: query
        name: page
        required: true
        type: string
      - description: Jumlah Data Per halaman
        in: query
        name: page_size
        required: true
        type: string
      - description: Mencari Data
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponsePaginate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Ambil daftar User
      tags:
      - User
  /users/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Delete User
      tags:
      - User
    get:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Find User By ID
      tags:
      - User
    put:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update User Baru
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.CreateNewUser'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Update Data User
      tags:
      - User
  /users/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Daftar User Baru
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.CreateNewUser'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Daftar User Baru
      tags:
      - User
  /users/status/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Set Status User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.ToggleActive'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Set Status User
      tags:
      - User
  /volumes:
    get:
      consumes:
      - application/json
      parameters:
      - description: Halaman
        in: query
        name: page
        required: true
        type: string
      - description: Jumlah Data Per halaman
        in: query
        name: page_size
        required: true
        type: string
      - description: Mencari Data
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponsePaginate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Get Volume
      tags:
      - Volume
  /volumes/{volume_id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Volume ID
        in: path
        name: volume_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponsePaginate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Get Detail Volume
      tags:
      - Volume
  /volumes/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: Upload Document
        in: formData
        name: file
        required: true
        type: file
      - in: formData
        name: project_id
        required: true
        type: integer
      - in: formData
        name: shelf
        required: true
        type: number
      - in: formData
        name: shelf_long
        required: true
        type: number
      - in: formData
        name: storage_facility_id
        required: true
        type: integer
      - in: formData
        name: structure_id
        required: true
        type: string
      - in: formData
        name: unit
        required: true
        type: number
      - in: formData
        name: volume_storage_media_percentage
        type: number
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Create Volume
      tags:
      - Volume
  /volumes/update:
    post:
      consumes:
      - application/json
      parameters:
      - description: Upload Document
        in: formData
        name: file
        required: true
        type: file
      - in: formData
        name: id
        required: true
        type: integer
      - in: formData
        name: shelf
        required: true
        type: number
      - in: formData
        name: shelf_long
        required: true
        type: number
      - in: formData
        name: storage_facility_id
        required: true
        type: integer
      - in: formData
        name: unit
        required: true
        type: number
      - in: formData
        name: volume_storage_media_percentage
        type: number
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Update Volume
      tags:
      - Volume
schemes:
- http
swagger: "2.0"
