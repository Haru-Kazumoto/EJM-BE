definitions:
  dto.CreateAction:
    properties:
      default:
        type: boolean
      method:
        type: string
      name:
        type: string
      path:
        type: string
    required:
    - method
    - name
    - path
    type: object
  dto.CreateMenu:
    properties:
      name:
        type: string
      parent_id:
        type: integer
      path:
        type: string
    required:
    - name
    - path
    type: object
  dto.CreateNewUser:
    properties:
      address:
        type: string
      email:
        type: string
      enable_login_by_link:
        type: boolean
      full_name:
        type: string
      password:
        type: string
      phone:
        type: string
      profilePict:
        type: string
      roleId:
        type: integer
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  dto.CreateRole:
    properties:
      actions:
        items:
          $ref: '#/definitions/dto.MenusAction'
        type: array
      active:
        type: boolean
      name:
        type: string
      object_actions:
        items:
          properties:
            id:
              type: integer
            name:
              type: string
            parentId:
              type: integer
            path:
              type: string
            state:
              type: integer
            type:
              type: string
          required:
          - id
          - name
          - path
          - type
          type: object
        type: array
    required:
    - actions
    - name
    - object_actions
    type: object
  dto.DeleteActionBulk:
    properties:
      ids:
        items:
          type: integer
        minItems: 1
        type: array
    required:
    - ids
    type: object
  dto.DeleteMenuBulk:
    properties:
      ids:
        items:
          type: integer
        minItems: 1
        type: array
    required:
    - ids
    type: object
  dto.DeleteRoleBulk:
    properties:
      role_ids:
        items:
          type: integer
        minItems: 1
        type: array
    required:
    - role_ids
    type: object
  dto.DeleteUserBulk:
    properties:
      ids:
        items:
          type: integer
        minItems: 1
        type: array
    required:
    - ids
    type: object
  dto.Login:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  dto.LoginByPin:
    properties:
      pin:
        type: string
    required:
    - pin
    type: object
  dto.MenuAPI:
    properties:
      id:
        type: integer
      name:
        type: string
      parentId:
        type: integer
      path:
        type: string
      type:
        type: string
    type: object
  dto.MenusAction:
    properties:
      apiid:
        items:
          type: integer
        type: array
      menuId:
        type: integer
    required:
    - menuId
    type: object
  dto.PayloadCreateAction:
    properties:
      data:
        items:
          $ref: '#/definitions/dto.CreateAction'
        minItems: 1
        type: array
    required:
    - data
    type: object
  dto.PayloadCreateMenu:
    properties:
      data:
        items:
          $ref: '#/definitions/dto.CreateMenu'
        minItems: 1
        type: array
    required:
    - data
    type: object
  dto.RefreshToken:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  dto.SetAccessRole:
    properties:
      actions:
        items:
          $ref: '#/definitions/dto.MenusAction'
        type: array
      roleId:
        type: integer
    required:
    - actions
    - roleId
    type: object
  dto.ToggleActive:
    properties:
      payload:
        type: boolean
    type: object
  dto.UpdateAction:
    properties:
      default:
        type: boolean
      method:
        type: string
      name:
        type: string
      path:
        type: string
    required:
    - method
    - name
    - path
    type: object
  dto.UpdateMenu:
    properties:
      apis:
        items:
          type: integer
        type: array
      name:
        type: string
      parent_id:
        type: integer
      path:
        type: string
    required:
    - name
    - path
    type: object
  middlewares.ResponseError:
    properties:
      message: {}
      request_id:
        type: string
      time:
        type: string
    type: object
  models.Action:
    properties:
      api:
        type: string
      created_at:
        type: string
      default:
        type: boolean
      id:
        type: integer
      method:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.ActionsMenus:
    properties:
      actionId:
        type: integer
      actions:
        $ref: '#/definitions/models.Action'
      created_at:
        type: string
      id:
        type: integer
      menuId:
        type: integer
      updated_at:
        type: string
    type: object
  models.Menu:
    properties:
      actions_menus:
        items:
          $ref: '#/definitions/models.ActionsMenus'
        type: array
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      parentId:
        type: integer
      path:
        type: string
      updated_at:
        type: string
    type: object
  models.Paginate:
    properties:
      page:
        type: string
      page_count:
        type: integer
      page_size:
        type: string
      total:
        type: integer
    type: object
  models.Role:
    properties:
      created_at:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      name:
        type: string
      object_menus:
        items: {}
        type: array
      roles_menus:
        items:
          $ref: '#/definitions/models.RolesMenus'
        type: array
      updated_at:
        type: string
    type: object
  models.RolesMenus:
    properties:
      created_at:
        type: string
      id:
        type: integer
      menu:
        $ref: '#/definitions/models.Menu'
      menu_id:
        type: integer
      role:
        $ref: '#/definitions/models.Role'
      roleId:
        type: integer
      updated_at:
        type: string
    type: object
  models.User:
    properties:
      address:
        type: string
      created_at:
        type: string
      email:
        type: string
      enable_login_by_link:
        type: boolean
      full_name:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      phone:
        type: string
      pin:
        type: string
      profile_pict:
        type: string
      role:
        $ref: '#/definitions/models.Role'
      roleId:
        type: integer
      updated_at:
        type: string
      username:
        type: string
    type: object
  services.LoginResponse:
    properties:
      refresh_token:
        type: string
      token:
        type: string
    type: object
  utils.Response:
    properties:
      data: {}
      message: {}
      statusCode:
        type: integer
    type: object
  utils.ResponsePaginate:
    properties:
      data: {}
      key:
        type: string
      message: {}
      meta:
        $ref: '#/definitions/models.Paginate'
      statusCode:
        type: integer
    type: object
info:
  contact: {}
  description: Aplikasi Elektronik Journal Monitoring
  title: Elektronik Journal Centralized by Mandiri
  version: "1.0"
paths:
  /actions/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID Menu
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Delete Action
      tags:
      - Action
    get:
      consumes:
      - application/json
      parameters:
      - description: ID Menu
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Action'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Detail Action
      tags:
      - Action
    put:
      consumes:
      - application/json
      parameters:
      - description: ID Menu
        in: path
        name: id
        required: true
        type: integer
      - description: body update
        in: body
        name: menu
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateAction'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Menu'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Update Action
      tags:
      - Action
  /actions/bulk:
    delete:
      consumes:
      - application/json
      parameters:
      - description: body delete
        in: body
        name: menu
        required: true
        schema:
          $ref: '#/definitions/dto.DeleteActionBulk'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Menu'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Delete Actions Bulk
      tags:
      - Actions
  /actions/create-bulk:
    post:
      consumes:
      - application/json
      parameters:
      - description: Data API
        in: body
        name: menus
        required: true
        schema:
          $ref: '#/definitions/dto.PayloadCreateAction'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Create Action Bulk
      tags:
      - API
  /actions/menu/{menu_id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: ID Menu
        in: path
        name: menu_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Action'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Detail Action By Menu
      tags:
      - Action
  /actions/paginated:
    get:
      consumes:
      - application/json
      parameters:
      - description: Halaman
        in: query
        name: page
        required: true
        type: string
      - description: Jumlah Data Per halaman
        in: query
        name: page_size
        required: true
        type: string
      - description: Mencari Data
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Ambil semua data API
      tags:
      - Action
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Bahasa
        enum:
        - en
        - id
        in: header
        name: Accept-Language
        type: string
      - description: Login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/dto.Login'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.LoginResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: Autentikasi User untuk Resource Private Server
      tags:
      - Auth
  /auth/oauth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Bahasa
        enum:
        - en
        - id
        in: header
        name: Accept-Language
        type: string
      - description: Login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/dto.LoginByPin'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.LoginResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: Autentikasi User untuk Resource Private Server
      tags:
      - Auth
  /auth/refresh-token:
    post:
      consumes:
      - application/json
      parameters:
      - description: Bahasa
        enum:
        - en
        - id
        in: header
        name: Accept-Language
        type: string
      - description: Refresh Token
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/dto.RefreshToken'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.LoginResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: Refresh JWT Token Yang Expired
      tags:
      - Auth
  /menus:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.MenuAPI'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Ambil semua data menu
      tags:
      - Menu
  /menus/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID Menu
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Delete Menu
      tags:
      - Menu
    get:
      consumes:
      - application/json
      parameters:
      - description: ID Menu
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Menu'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Detail Menu
      tags:
      - Menu
    put:
      consumes:
      - application/json
      parameters:
      - description: ID Menu
        in: path
        name: id
        required: true
        type: integer
      - description: body update
        in: body
        name: menu
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateMenu'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Menu'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Update Menu
      tags:
      - Menu
  /menus/bulk:
    delete:
      consumes:
      - application/json
      parameters:
      - description: body delete
        in: body
        name: menu
        required: true
        schema:
          $ref: '#/definitions/dto.DeleteMenuBulk'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Menu'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Delete Menu Bulk
      tags:
      - Menu
  /menus/create-bulk:
    post:
      consumes:
      - application/json
      parameters:
      - description: Data Menu
        in: body
        name: menus
        required: true
        schema:
          $ref: '#/definitions/dto.PayloadCreateMenu'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Create Menu Bulk
      tags:
      - Menu
  /menus/paginated:
    get:
      consumes:
      - application/json
      parameters:
      - description: Halaman
        in: query
        name: page
        required: true
        type: string
      - description: Jumlah Data Per halaman
        in: query
        name: page_size
        required: true
        type: string
      - description: Mencari Data
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Ambil semua data menu
      tags:
      - Menu
  /roles:
    get:
      consumes:
      - application/json
      parameters:
      - description: Halaman
        in: query
        name: page
        required: true
        type: string
      - description: Jumlah Data Per halaman
        in: query
        name: page_size
        required: true
        type: string
      - description: Mencari Data
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponsePaginate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Ambil daftar Role
      tags:
      - Role
    post:
      consumes:
      - application/json
      parameters:
      - description: Daftar Role Baru
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.CreateRole'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Role'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Daftar Role Baru
      tags:
      - Role
  /roles/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Get Role Berdasarkan ID
      tags:
      - Role
    patch:
      consumes:
      - application/json
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      - description: Update Role
        in: body
        name: roles
        required: true
        schema:
          $ref: '#/definitions/dto.CreateRole'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Update Role Berdasarkan ID
      tags:
      - Role
  /roles/delete-access-role:
    delete:
      consumes:
      - application/json
      parameters:
      - description: role id
        in: query
        name: roleId
        required: true
        type: string
      - description: menu id
        in: query
        name: menuId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponsePaginate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API Delete Akses Role
      tags:
      - Role
  /roles/delete-bulk:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Hapus Role banyak
        in: body
        name: roleIds
        required: true
        schema:
          $ref: '#/definitions/dto.DeleteRoleBulk'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Hapus Role banyak
      tags:
      - Role
  /roles/delete/{roleId}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Role Id
        in: path
        name: roleId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Delete Role Berdasarkan ID
      tags:
      - Role
  /roles/set-access-role:
    post:
      consumes:
      - application/json
      parameters:
      - description: Akses Role
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/dto.SetAccessRole'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: Set Akses Role
      tags:
      - Auth
  /roles/update-access-role:
    patch:
      consumes:
      - application/json
      parameters:
      - description: Akses Role
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/dto.SetAccessRole'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: Update Akses Role
      tags:
      - Auth
  /session:
    get:
      consumes:
      - application/json
      parameters:
      - description: Bahasa
        enum:
        - en
        - id
        in: header
        name: Accept-Language
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: Data Sesi
      tags:
      - Auth
  /users:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Delete User Bulk
        in: body
        name: user_ids
        required: true
        schema:
          $ref: '#/definitions/dto.DeleteUserBulk'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Delete User Bulk
      tags:
      - User
    get:
      consumes:
      - application/json
      parameters:
      - description: Halaman
        in: query
        name: page
        required: true
        type: string
      - description: Jumlah Data Per halaman
        in: query
        name: page_size
        required: true
        type: string
      - description: Mencari Data
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponsePaginate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Ambil daftar User
      tags:
      - User
  /users/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Delete User
      tags:
      - User
    get:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Find User By ID
      tags:
      - User
    put:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update User Baru
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.CreateNewUser'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Update Data User
      tags:
      - User
  /users/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Daftar User Baru
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.CreateNewUser'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Daftar User Baru
      tags:
      - User
  /users/status/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Set Status User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.ToggleActive'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/middlewares.ResponseError'
      summary: API untuk Set Status User
      tags:
      - User
schemes:
- http
swagger: "2.0"
